{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nlet AddEditProductComponent = class AddEditProductComponent {\n  constructor(productService, fb, toastr) {\n    this.productService = productService;\n    this.fb = fb;\n    this.toastr = toastr;\n    this.createProductForm = () => {\n      return this.productForm = this.fb.group({\n        id: new FormControl(0),\n        name: new FormControl(),\n        description: new FormControl(),\n        price: new FormControl(),\n        imagePath: new FormControl()\n      });\n    };\n    this.validateControl = controlName => {\n      if (this.productForm.get(controlName)?.invalid && this.productForm.get(controlName)?.touched) return true;\n      return false;\n    };\n    this.hasError = (controlName, errorName) => {\n      if (this.productForm.get(controlName)?.hasError(errorName)) return true;\n      return false;\n    };\n  }\n  ngOnInit() {\n    this.createProductForm();\n  }\n  submit() {\n    const formData = new FormData();\n    formData.append('id', this.productForm.value.id);\n    formData.append('name', this.productForm.value.name);\n    formData.append('description', this.productForm.value.description);\n    formData.append('price', this.productForm.value.price);\n    formData.append('imagePath', this.selectedFile);\n    this.productService.addProduct(formData).subscribe(response => {\n      console.log('Product created successfully');\n      this.toastr.showSuccess('Product added successfully.', 'Product');\n    }, error => {\n      console.log('Product creation failed');\n      this.toastr.showError('Something went wrong.', 'Product');\n    });\n  }\n  uploadPhoto(file) {\n    debugger;\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    this.product.imagePath = file;\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n};\nAddEditProductComponent = __decorate([Component({\n  selector: 'app-add-edit-product',\n  templateUrl: './add-edit-product.component.html',\n  styleUrls: ['./add-edit-product.component.css']\n})], AddEditProductComponent);\nexport { AddEditProductComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsBC,WAAW,QAAmB,gBAAgB;AAU7D,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAIlCC,YAAoBC,cAA8B,EAAUC,EAAe,EACjEC,MAAiC;IADvB,mBAAc,GAAdF,cAAc;IAA0B,OAAE,GAAFC,EAAE;IACpD,WAAM,GAANC,MAAM;IAOhB,sBAAiB,GAAG,MAAK;MACvB,OAAO,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;QACtCC,EAAE,EAAE,IAAIR,WAAW,CAAC,CAAC,CAAC;QACtBS,IAAI,EAAE,IAAIT,WAAW,EAAE;QACvBU,WAAW,EAAE,IAAIV,WAAW,EAAE;QAC9BW,KAAK,EAAE,IAAIX,WAAW,EAAE;QACxBY,SAAS,EAAE,IAAIZ,WAAW;OAC3B,CAAC;IACJ,CAAC;IAsBD,oBAAe,GAAIa,WAAmB,IAAI;MACxC,IAAI,IAAI,CAACP,WAAW,CAACQ,GAAG,CAACD,WAAW,CAAC,EAAEE,OAAO,IAAI,IAAI,CAACT,WAAW,CAACQ,GAAG,CAACD,WAAW,CAAC,EAAEG,OAAO,EAC1F,OAAO,IAAI;MAEb,OAAO,KAAK;IACd,CAAC;IAED,aAAQ,GAAG,CAACH,WAAmB,EAAEI,SAAiB,KAAI;MACpD,IAAI,IAAI,CAACX,WAAW,CAACQ,GAAG,CAACD,WAAW,CAAC,EAAEK,QAAQ,CAACD,SAAS,CAAC,EACxD,OAAO,IAAI;MAEb,OAAO,KAAK;IACd,CAAC;EAhDD;EAEAE,QAAQ;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAYAC,MAAM;IACJ,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAE,IAAI,CAAClB,WAAW,CAACmB,KAAK,CAACjB,EAAE,CAAC;IAChDc,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAClB,WAAW,CAACmB,KAAK,CAAChB,IAAI,CAAC;IACpDa,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAAClB,WAAW,CAACmB,KAAK,CAACf,WAAW,CAAC;IAClEY,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAClB,WAAW,CAACmB,KAAK,CAACd,KAAK,CAAC;IACtDW,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACE,YAAY,CAAC;IAE/C,IAAI,CAACvB,cAAc,CAACwB,UAAU,CAACL,QAAQ,CAAC,CAACM,SAAS,CAC/CC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,IAAI,CAAC1B,MAAM,CAAC2B,WAAW,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACnE,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,IAAI,CAAC1B,MAAM,CAAC6B,SAAS,CAAC,uBAAuB,EAAE,SAAS,CAAC;IAC3D,CAAC,CACF;EACH;EAgBAC,WAAW,CAACC,IAAS;IACnB;IACA,MAAMd,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEY,IAAI,EAAEA,IAAI,CAAC3B,IAAI,CAAC;IACxC,IAAI,CAAC4B,OAAO,CAACzB,SAAS,GAAGwB,IAAI;EAC/B;EAIAE,cAAc,CAACC,KAAU;IACvB,IAAI,CAACb,YAAY,GAAGa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;CAED;AAtEYxC,uBAAuB,eALnCF,SAAS,CAAC;EACT2C,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACW3C,uBAAuB,CAsEnC;SAtEYA,uBAAuB","names":["Component","FormControl","AddEditProductComponent","constructor","productService","fb","toastr","productForm","group","id","name","description","price","imagePath","controlName","get","invalid","touched","errorName","hasError","ngOnInit","createProductForm","submit","formData","FormData","append","value","selectedFile","addProduct","subscribe","response","console","log","showSuccess","error","showError","uploadPhoto","file","product","onFileSelected","event","target","files","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\SHOPPING CART\\ShoppingCart\\ShoppingCart\\ShoppingCart\\ClientApp\\src\\app\\add-edit-product\\add-edit-product.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from '../product.model';\r\nimport { ToastrNotificationService } from '../toastr-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-product',\r\n  templateUrl: './add-edit-product.component.html',\r\n  styleUrls: ['./add-edit-product.component.css']\r\n})\r\nexport class AddEditProductComponent implements OnInit {\r\n  productForm: FormGroup;\r\n  product: Product;\r\n\r\n  constructor(private productService: ProductService, private fb: FormBuilder,\r\n    private toastr: ToastrNotificationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createProductForm();\r\n  }\r\n\r\n  createProductForm = () => {\r\n    return this.productForm = this.fb.group({\r\n      id: new FormControl(0),\r\n      name: new FormControl(),\r\n      description: new FormControl(),\r\n      price: new FormControl(),\r\n      imagePath: new FormControl()\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    const formData = new FormData();\r\n    formData.append('id', this.productForm.value.id);\r\n    formData.append('name', this.productForm.value.name);\r\n    formData.append('description', this.productForm.value.description);\r\n    formData.append('price', this.productForm.value.price);\r\n    formData.append('imagePath', this.selectedFile);\r\n\r\n    this.productService.addProduct(formData).subscribe(\r\n      (response) => {\r\n        console.log('Product created successfully');\r\n        this.toastr.showSuccess('Product added successfully.', 'Product')\r\n      },\r\n      (error) => {\r\n        console.log('Product creation failed');\r\n        this.toastr.showError('Something went wrong.', 'Product')\r\n      }\r\n    );\r\n  }\r\n\r\n  validateControl = (controlName: string) => {\r\n    if (this.productForm.get(controlName)?.invalid && this.productForm.get(controlName)?.touched)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  hasError = (controlName: string, errorName: string) => {\r\n    if (this.productForm.get(controlName)?.hasError(errorName))\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  uploadPhoto(file: any) {\r\n    debugger;\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', file, file.name);\r\n    this.product.imagePath = file;\r\n  }\r\n\r\n  selectedFile: File;\r\n\r\n  onFileSelected(event: any): void {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}