{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nexport class ToastrNotificationService {\n  constructor(toastr) {\n    this.toastr = toastr;\n  }\n  showSuccess(message, title) {\n    this.toastr.success(message, title);\n  }\n  showError(message, title) {\n    this.toastr.error(message, title);\n  }\n  showInfo(message, title) {\n    this.toastr.info(message, title);\n  }\n  showWarning(message, title) {\n    this.toastr.warning(message, title);\n  }\n}\nToastrNotificationService.ɵfac = function ToastrNotificationService_Factory(t) {\n  return new (t || ToastrNotificationService)(i0.ɵɵinject(i1.ToastrService));\n};\nToastrNotificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ToastrNotificationService,\n  factory: ToastrNotificationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,yBAAyB;EAEpCC,YAAoBC,MAAqB;IAArB,WAAM,GAANA,MAAM;EAAmB;EAE7CC,WAAW,CAACC,OAAe,EAAEC,KAAa;IACxC,IAAI,CAACH,MAAM,CAACI,OAAO,CAACF,OAAO,EAAEC,KAAK,CAAC;EACrC;EAEAE,SAAS,CAACH,OAAe,EAAEC,KAAa;IACtC,IAAI,CAACH,MAAM,CAACM,KAAK,CAACJ,OAAO,EAAEC,KAAK,CAAC;EACnC;EAEAI,QAAQ,CAACL,OAAe,EAAEC,KAAa;IACrC,IAAI,CAACH,MAAM,CAACQ,IAAI,CAACN,OAAO,EAAEC,KAAK,CAAC;EAClC;EAEAM,WAAW,CAACP,OAAe,EAAEC,KAAa;IACxC,IAAI,CAACH,MAAM,CAACU,OAAO,CAACR,OAAO,EAAEC,KAAK,CAAC;EACrC;;AAlBWL,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;SAAzBA,yBAAyB;EAAAa,SAAzBb,yBAAyB;EAAAc,YAFxB;AAAM","names":["ToastrNotificationService","constructor","toastr","showSuccess","message","title","success","showError","error","showInfo","info","showWarning","warning","factory","providedIn"],"sourceRoot":"","sources":["E:\\SHOPPING CART\\ShoppingCart\\ShoppingCart\\ShoppingCart\\ClientApp\\src\\app\\notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastrNotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title)\n  }\n\n  showError(message: string, title: string) {\n    this.toastr.error(message, title)\n  }\n\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title)\n  }\n\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}